"cfb484c6b9618abc55840265d2cff7c25deb3f26"
[cl-struct-undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#2=[nil nil ((#("L" 0 1 (fontified t)) . 3148) (undo-tree-id399 . 1) (undo-tree-id400 . 1) (undo-tree-id401 . 1) (undo-tree-id402 . 1) (undo-tree-id403 . 1) (undo-tree-id404 . 1) (undo-tree-id405 . 1) (undo-tree-id406 . 1) (undo-tree-id407 . 1) (undo-tree-id408 . 1) (undo-tree-id409 . 1) (undo-tree-id410 . 1) (undo-tree-id411 . 1) (undo-tree-id412 . 1) (undo-tree-id413 . 1) (undo-tree-id414 . 1) (undo-tree-id415 . 1) (undo-tree-id416 . -1)) nil (22959 24561 376732 404000) 0 nil]) ((#("M" 0 1 (fontified t)) . 3148) (undo-tree-id417 . 1) (undo-tree-id418 . 1) (undo-tree-id419 . 1) (undo-tree-id420 . 1) (undo-tree-id421 . 1) (undo-tree-id422 . 1) (undo-tree-id423 . 1) (undo-tree-id424 . 1) (undo-tree-id425 . 1) (undo-tree-id426 . 1) (undo-tree-id427 . 1) (undo-tree-id428 . 1) (undo-tree-id429 . 1) (undo-tree-id430 . 1) (undo-tree-id431 . 1)) nil (22959 24561 376755 190000) 0 nil]) ((#("T" 0 1 (fontified t)) . 3148) (undo-tree-id432 . 1) (undo-tree-id433 . 1) (undo-tree-id434 . 1) (undo-tree-id435 . 1) (undo-tree-id436 . 1) (undo-tree-id437 . 1) (undo-tree-id438 . 1) (undo-tree-id439 . 1) (undo-tree-id440 . 1) (undo-tree-id441 . 1) (undo-tree-id442 . 1) (undo-tree-id443 . 1) (undo-tree-id444 . 1)) nil (22959 24561 376771 781000) 0 nil]) ((#("H" 0 1 (fontified t)) . 3148) (undo-tree-id445 . 1) (undo-tree-id446 . 1) (undo-tree-id447 . 1) (undo-tree-id448 . 1) (undo-tree-id449 . 1) (undo-tree-id450 . 1) (undo-tree-id451 . 1) (undo-tree-id452 . 1) (undo-tree-id453 . 1) (undo-tree-id454 . 1) (undo-tree-id455 . 1)) nil (22959 24561 376785 707000) 0 nil]) ((#(" " 0 1 (fontified t)) . 3148) (undo-tree-id456 . 1) (undo-tree-id457 . 1) (undo-tree-id458 . 1) (undo-tree-id459 . 1) (undo-tree-id460 . 1) (undo-tree-id461 . 1) (undo-tree-id462 . 1) (undo-tree-id463 . 1) (undo-tree-id464 . 1)) nil (22959 24561 376797 960000) 0 nil]) ((#("d" 0 1 (fontified t)) . 3148) (undo-tree-id465 . 1) (undo-tree-id466 . 1) (undo-tree-id467 . 1) (undo-tree-id468 . 1) (undo-tree-id469 . 1) (undo-tree-id470 . 1) (undo-tree-id471 . 1) (undo-tree-id472 . -1)) nil (22959 24561 376809 699000) 0 nil]) ((#("n" 0 1 (fontified t)) . 3148) (undo-tree-id473 . 1) (undo-tree-id474 . 1) (undo-tree-id475 . 1) (undo-tree-id476 . 1) (undo-tree-id477 . 1)) nil (22959 24561 376817 379000) 0 nil]) ((#("a" 0 1 (fontified t)) . 3148) (undo-tree-id478 . 1) (undo-tree-id479 . 1) (undo-tree-id480 . 1)) nil (22959 24561 376823 71000) 0 nil]) ((#(" " 0 1 (fontified t)) . 3148) (undo-tree-id481 . 1)) nil (22959 24561 376826 262000) 0 nil]) ((#("j" 0 1 (fontified t)) . -3126) (undo-tree-id482 . -1) (3123 . 3127)) nil (22959 24561 376829 729000) 0 nil]) ((#("d" 0 1 (fontified t)) . 3123) (undo-tree-id483 . 1) (undo-tree-id484 . 1) (undo-tree-id485 . 1) (undo-tree-id486 . -1)) nil (22959 24561 376836 723000) 0 nil]) ((#("e" 0 1 (fontified t)) . 3123) (undo-tree-id487 . 1)) nil (22959 24561 376840 54000) 0 nil]) ((#("j" 0 1 (fontified t)) . -3122) (undo-tree-id488 . -1) (3120 . 3123) (#("U" 0 1 (fontified t)) . 3120) (undo-tree-id489 . 1) (undo-tree-id490 . 1) (undo-tree-id491 . 1) (undo-tree-id492 . 1) (undo-tree-id493 . 1) (undo-tree-id494 . 1) (undo-tree-id495 . 1) (undo-tree-id496 . 1) (#(" " 0 1 (fontified t)) . 3120) (undo-tree-id497 . 1) (undo-tree-id498 . 1) (undo-tree-id499 . 1) (undo-tree-id500 . 1) (undo-tree-id501 . 1) (undo-tree-id502 . 1) (#("." 0 1 (fontified t)) . 3120) (undo-tree-id503 . 1) (undo-tree-id504 . 1) (undo-tree-id505 . 1) (undo-tree-id506 . 1) (3119 . 3120) (t 22959 24484 126767 332000)) nil (22959 24561 376865 192000) 0 nil]) ((#("    \\1 AWANA Games: 1\\textsuperscript{st} place region-wide \\hfill 2013
    \\1 FIRST Robotics Competition: 1\\textsuperscript{st} place state-wide \\hfill 2008 \\hfill
" 0 4 (fontified t) 4 6 (fontified t face font-lock-keyword-face) 6 21 (fontified t) 21 37 (fontified t face font-lock-keyword-face) 37 48 (fontified t) 48 60 (fontified t) 60 66 (face font-lock-keyword-face fontified t) 66 72 (fontified t) 72 76 (fontified t) 76 78 (fontified t face font-lock-keyword-face) 78 108 (fontified t) 108 121 (fontified t face font-lock-keyword-face) 121 124 (fontified t face font-lock-keyword-face) 124 146 (fontified t) 146 152 (fontified t face font-lock-keyword-face) 152 158 (fontified t) 158 164 (fontified t face font-lock-keyword-face) 164 165 (fontified t)) . 5086) (undo-tree-id378 . -106) (undo-tree-id379 . -72) (undo-tree-id380 . -72) (undo-tree-id381 . -165) (undo-tree-id382 . -165) (undo-tree-id383 . -34) (undo-tree-id384 . -106) (undo-tree-id385 . -106) (undo-tree-id386 . 59) (undo-tree-id387 . 131) (undo-tree-id388 . 59) (undo-tree-id389 . -165) (undo-tree-id390 . 131) (undo-tree-id391 . 131) (undo-tree-id392 . -34) (undo-tree-id393 . -106) (undo-tree-id394 . 59) (undo-tree-id395 . 131) (undo-tree-id396 . 59) (undo-tree-id397 . 59) 5192 (t 22959 24449 730099 972000)) nil (22959 24484 117796 211000) 0 nil]) ((#("j" 0 1 (fontified t face (bold))) . -2923) (undo-tree-id398 . -1) (2923 . 2924) (t 22959 24449 730099 972000)) nil (22959 24484 117804 147000) 0 nil]) ((#("      \\1 \\textbf{Interpreter} \\hfill Fall 2016
      \\\\ Implemented an interpreter for a given programming language specification and grammar in Haskell.
" 0 6 (fontified t) 6 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 16 (fontified t face font-lock-keyword-face) 16 17 (fontified t) 17 28 (fontified t face (bold)) 28 30 (fontified t) 30 36 (fontified t face font-lock-keyword-face) 36 48 (fontified t) 48 53 (fontified t) 53 55 (fontified t face font-lock-warning-face) 55 154 (fontified t)) . 3675) (undo-tree-id358 . -53) (undo-tree-id359 . -154) (undo-tree-id360 . -154) (undo-tree-id361 . -47) (undo-tree-id362 . -47) (undo-tree-id363 . -6) (undo-tree-id364 . -53) (undo-tree-id365 . -53) (undo-tree-id366 . -154) (undo-tree-id367 . -154) (undo-tree-id368 . 148) (undo-tree-id369 . -154) (undo-tree-id370 . 148) (undo-tree-id371 . 148) (undo-tree-id372 . -6) (undo-tree-id373 . -53) (undo-tree-id374 . 101) (undo-tree-id375 . 148) (undo-tree-id376 . 101) (undo-tree-id377 . 101) 3728 (t 22959 24425 326766 147000)) nil (22959 24449 728311 770000) 0 nil]) ((#("j" 0 1 (fontified t)) . -3157) (undo-tree-id331 . -1) (3156 . 3158) (#("." 0 1 (fontified t)) . -3156) (undo-tree-id332 . -1) (undo-tree-id333 . 1) 3157 (3152 . 3157) (#("h" 0 1 (fontified t)) . -3152) (undo-tree-id334 . -1) (undo-tree-id335 . 1) (#("t" 0 1 (fontified t)) . -3153) (undo-tree-id336 . -1) (undo-tree-id337 . 1) (#("m" 0 1 (fontified t)) . -3154) (undo-tree-id338 . -1) (undo-tree-id339 . 1) (undo-tree-id340 . -1) 3155 (#("l" 0 1 (fontified t)) . -3155) (undo-tree-id341 . -1) (undo-tree-id342 . 1) 3156 (3141 . 3156) (#(" " 0 1 (fontified t)) . -3141) (undo-tree-id343 . -1) (undo-tree-id344 . 1) 3142 (3125 . 3142) (3120 . 3125) (3119 . 3120) (3103 . 3119) (3082 . 3103) (3062 . 3082) (3041 . 3062) (3027 . 3041) (#("i" 0 1 (fontified t)) . -3027) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (#("n" 0 1 (fontified t)) . -3028) (undo-tree-id347 . -1) (#("g" 0 1 (fontified t)) . -3029) (undo-tree-id348 . -1) (#(" " 0 1 (fontified t)) . -3030) (undo-tree-id349 . -1) (#("w" 0 1 (fontified t)) . -3031) (undo-tree-id350 . -1) (#("i" 0 1 (fontified t)) . -3032) (undo-tree-id351 . -1) (#("t" 0 1 (fontified t)) . -3033) (undo-tree-id352 . -1) (#("h" 0 1 (fontified t)) . -3034) (undo-tree-id353 . -1) 3035 (3019 . 3035) (#("i" 0 1 (fontified t)) . -3019) (undo-tree-id354 . -1) (#("n" 0 1 (fontified t)) . -3020) (undo-tree-id355 . -1) 3021 (3008 . 3021) (#("b" 0 1 (fontified t)) . -3008) (undo-tree-id356 . -1) (#("e" 0 1 (fontified t)) . -3009) (undo-tree-id357 . -1) 3010 (3004 . 3010) (2983 . 3004) (2962 . 2983) (2955 . 2962) (t 22959 24253 303429 346000) 2949) nil (22959 24425 318664 27000) 0 nil]) ((2949 . 2950) (#("t" 0 1 (fontified t)) . 2949) (undo-tree-id321 . 1) (undo-tree-id322 . 1)) nil (22959 24253 295747 238000) 0 nil]) ((#("j" 0 1 (fontified t)) . -2955) (undo-tree-id323 . -1) (2955 . 2956) (#("j" 0 1 (fontified t)) . -2955) (undo-tree-id324 . -1) (undo-tree-id325 . 1) (#("k" 0 1 (fontified t)) . -2956) (undo-tree-id326 . -1) (undo-tree-id327 . 1) 2957 (2956 . 2957) (2955 . 2956) (#("j" 0 1 (fontified t)) . -2955) (undo-tree-id328 . -1) (2935 . 2956) (2926 . 2935) (#("w" 0 1 (fontified t)) . -2926) (undo-tree-id329 . -1) (undo-tree-id330 . 1) 2927 (2915 . 2927) (2894 . 2915) (2889 . 2894) (t 22959 21405 460038 608000) 2888) nil (22959 24253 295766 765000) 0 nil]) ((#(" " 0 1 (fontified t)) . 3352) (undo-tree-id296 . 1) (undo-tree-id297 . 1) (undo-tree-id298 . 1) (undo-tree-id299 . 1) (undo-tree-id300 . 1) (undo-tree-id301 . 1) (undo-tree-id302 . 1) (undo-tree-id303 . 1) (undo-tree-id304 . 1)) nil (22959 21405 456817 773000) 0 nil]) ((#("6" 0 1 (fontified t)) . 3352) (undo-tree-id305 . 1) (undo-tree-id306 . 1) (undo-tree-id307 . 1) (undo-tree-id308 . 1) (undo-tree-id309 . 1) (undo-tree-id310 . 1) (undo-tree-id311 . 1)) nil (22959 21405 456831 121000) 0 nil]) ((#("1" 0 1 (fontified t)) . 3352) (undo-tree-id312 . 1) (undo-tree-id313 . 1) (undo-tree-id314 . 1) (undo-tree-id315 . 1) (undo-tree-id316 . 1)) nil (22959 21405 456839 586000) 0 nil]) ((#("0" 0 1 (fontified t)) . 3352) (undo-tree-id317 . 1) (undo-tree-id318 . 1) (undo-tree-id319 . 1)) nil (22959 21405 456845 135000) 0 nil]) ((#("2" 0 1 (fontified t)) . 3352) (undo-tree-id320 . 1) (t 22959 21374 43371 309000)) nil (22959 21405 456848 989000) 0 nil]) ((nil rear-nonsticky nil 3217 . 3218) (#("
" 0 1 (fontified nil)) . -3411) (undo-tree-id52 . -1) (3211 . 3412) 3144) nil (22959 21374 36866 559000) 0 nil]) ((#("      \\1 \\textbf{Asunder, 2D Video Game} (team of 4) \\hfill Fall 2016
      \\\\ Programmed and helped design a video game for the Chillenium 2016 48-hour game jam, using C\\# and the Unity game engine.
" 0 6 (fontified t) 6 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 16 (fontified t face font-lock-keyword-face) 16 17 (fontified t) 17 26 (fontified t face #1=(bold)) 26 39 (fontified t face #1#) 39 53 (fontified t) 53 59 (fontified t face font-lock-keyword-face) 59 68 (fontified t) 68 69 (fontified t) 69 70 (fontified t) 70 76 (fontified t) 76 78 (fontified t face font-lock-warning-face) 78 170 (fontified t) 170 172 (fontified t face font-lock-keyword-face) 172 199 (fontified t) 199 200 (fontified t)) . 2890) (undo-tree-id53 . -126) (undo-tree-id54 . -200) (undo-tree-id55 . -200) (undo-tree-id56 . -70) (undo-tree-id57 . -70) (undo-tree-id58 . -56) (undo-tree-id59 . -126) (undo-tree-id60 . 47) (undo-tree-id61 . 175) (undo-tree-id62 . 175) (undo-tree-id63 . 1) (undo-tree-id64 . 37) (undo-tree-id65 . 1) (undo-tree-id66 . 36) (undo-tree-id67 . 1) (undo-tree-id68 . 35) (undo-tree-id69 . 1) (undo-tree-id70 . 35) (undo-tree-id71 . 1) (undo-tree-id72 . 35) (undo-tree-id73 . 1) (undo-tree-id74 . 35) (undo-tree-id75 . 1) (undo-tree-id76 . 31) (undo-tree-id77 . 1) (undo-tree-id78 . 1) (undo-tree-id79 . 1) (undo-tree-id80 . 1) (undo-tree-id81 . 1) (undo-tree-id82 . 1) (undo-tree-id83 . 1) (undo-tree-id84 . 1) (undo-tree-id85 . 1) (undo-tree-id86 . 30) (undo-tree-id87 . 1) (undo-tree-id88 . 29) (undo-tree-id89 . 1) (undo-tree-id90 . 28) (undo-tree-id91 . 1) (undo-tree-id92 . 27) (undo-tree-id93 . 1) (undo-tree-id94 . 26) (undo-tree-id95 . 1) (undo-tree-id96 . 25) (undo-tree-id97 . 1) (undo-tree-id98 . 24) (undo-tree-id99 . 1) (undo-tree-id100 . 23) (undo-tree-id101 . 1) (undo-tree-id102 . 22) (undo-tree-id103 . 1) (undo-tree-id104 . 21) (undo-tree-id105 . 1) (undo-tree-id106 . 20) (undo-tree-id107 . 1) (undo-tree-id108 . 19) (undo-tree-id109 . 1) (undo-tree-id110 . 18) (undo-tree-id111 . 1) (undo-tree-id112 . 17) (undo-tree-id113 . 1) (undo-tree-id114 . 16) (undo-tree-id115 . 1) (undo-tree-id116 . 15) (undo-tree-id117 . 1) (undo-tree-id118 . 14) (undo-tree-id119 . 1) (undo-tree-id120 . 13) (undo-tree-id121 . 1) (undo-tree-id122 . 12) (undo-tree-id123 . 1) (undo-tree-id124 . 11) (undo-tree-id125 . 1) (undo-tree-id126 . 10) (undo-tree-id127 . 1) (undo-tree-id128 . 9) (undo-tree-id129 . 1) (undo-tree-id130 . 8) (undo-tree-id131 . 1) (undo-tree-id132 . 7) (undo-tree-id133 . 1) (undo-tree-id134 . 6) (undo-tree-id135 . 1) (undo-tree-id136 . 5) (undo-tree-id137 . 1) (undo-tree-id138 . 4) (undo-tree-id139 . 1) (undo-tree-id140 . 3) (undo-tree-id141 . 1) (undo-tree-id142 . 2) (undo-tree-id143 . 2) (undo-tree-id144 . 2) (undo-tree-id145 . 1) (undo-tree-id146 . 2) (undo-tree-id147 . 2) (undo-tree-id148 . 2) (undo-tree-id149 . 3) (undo-tree-id150 . 2) (undo-tree-id151 . 4) (undo-tree-id152 . 3) (undo-tree-id153 . 5) (undo-tree-id154 . 4) (undo-tree-id155 . 6) (undo-tree-id156 . 5) (undo-tree-id157 . 7) (undo-tree-id158 . 6) (undo-tree-id159 . 8) (undo-tree-id160 . 7) (undo-tree-id161 . 9) (undo-tree-id162 . 8) (undo-tree-id163 . 10) (undo-tree-id164 . 9) (undo-tree-id165 . 11) (undo-tree-id166 . 10) (undo-tree-id167 . 12) (undo-tree-id168 . 11) (undo-tree-id169 . 13) (undo-tree-id170 . 12) (undo-tree-id171 . 14) (undo-tree-id172 . 13) (undo-tree-id173 . 15) (undo-tree-id174 . 14) (undo-tree-id175 . 16) (undo-tree-id176 . 15) (undo-tree-id177 . 17) (undo-tree-id178 . 16) (undo-tree-id179 . 18) (undo-tree-id180 . 17) (undo-tree-id181 . 19) (undo-tree-id182 . 18) (undo-tree-id183 . 20) (undo-tree-id184 . 19) (undo-tree-id185 . 21) (undo-tree-id186 . 20) (undo-tree-id187 . 22) (undo-tree-id188 . 21) (undo-tree-id189 . 23) (undo-tree-id190 . 22) (undo-tree-id191 . 24) (undo-tree-id192 . 23) (undo-tree-id193 . 25) (undo-tree-id194 . 24) (undo-tree-id195 . 26) (undo-tree-id196 . 25) (undo-tree-id197 . 27) (undo-tree-id198 . 26) (undo-tree-id199 . 28) (undo-tree-id200 . 27) (undo-tree-id201 . 29) (undo-tree-id202 . 28) (undo-tree-id203 . 30) (undo-tree-id204 . 29) (undo-tree-id205 . 31) (undo-tree-id206 . 30) (undo-tree-id207 . 32) (undo-tree-id208 . 31) (undo-tree-id209 . 33) (undo-tree-id210 . 32) (undo-tree-id211 . 34) (undo-tree-id212 . 33) (undo-tree-id213 . 35) (undo-tree-id214 . 34) (undo-tree-id215 . 36) (undo-tree-id216 . 35) (undo-tree-id217 . 37) (undo-tree-id218 . 36) (undo-tree-id219 . 38) (undo-tree-id220 . 37) (undo-tree-id221 . 39) (undo-tree-id222 . 38) (undo-tree-id223 . 40) (undo-tree-id224 . 39) (undo-tree-id225 . 41) (undo-tree-id226 . 40) (undo-tree-id227 . 42) (undo-tree-id228 . 41) (undo-tree-id229 . 43) (undo-tree-id230 . 42) (undo-tree-id231 . 44) (undo-tree-id232 . 43) (undo-tree-id233 . 45) (undo-tree-id234 . 44) (undo-tree-id235 . 46) (undo-tree-id236 . 45) (undo-tree-id237 . 47) (undo-tree-id238 . 46) (undo-tree-id239 . 47) (undo-tree-id240 . 47) (undo-tree-id241 . 47) (undo-tree-id242 . 55) (undo-tree-id243 . 47) (undo-tree-id244 . 54) (undo-tree-id245 . 47) (undo-tree-id246 . 53) (undo-tree-id247 . 47) (undo-tree-id248 . 52) (undo-tree-id249 . 47) (undo-tree-id250 . 51) (undo-tree-id251 . 47) (undo-tree-id252 . 50) (undo-tree-id253 . 47) (undo-tree-id254 . 49) (undo-tree-id255 . 47) (undo-tree-id256 . 48) (undo-tree-id257 . 48) (undo-tree-id258 . 48) (undo-tree-id259 . 48) (undo-tree-id260 . 48) (undo-tree-id261 . 48) (undo-tree-id262 . 48) (undo-tree-id263 . 48) (undo-tree-id264 . 48) (undo-tree-id265 . 48) (undo-tree-id266 . 48) (undo-tree-id267 . 48) (undo-tree-id268 . 48) (undo-tree-id269 . 131) (undo-tree-id270 . 48) (undo-tree-id271 . 48) (undo-tree-id272 . 131) (undo-tree-id273 . 131) (undo-tree-id274 . 48) (undo-tree-id275 . 132) (undo-tree-id276 . 132) (undo-tree-id277 . 62) (undo-tree-id278 . 132) (undo-tree-id279 . 71) (undo-tree-id280 . -139) (undo-tree-id281 . 62) (undo-tree-id282 . -126) (undo-tree-id283 . -70) (undo-tree-id284 . 74) (undo-tree-id285 . 144) (undo-tree-id286 . 74) (undo-tree-id287 . -200) (undo-tree-id288 . 144) (undo-tree-id289 . 144) (undo-tree-id290 . -56) (undo-tree-id291 . -126) (undo-tree-id292 . 74) (undo-tree-id293 . 144) (undo-tree-id294 . 74) (undo-tree-id295 . 74) 3016 (t 22959 21359 376704 347000)) nil (22959 21374 37145 952000) 0 nil]) ((2958 . 2959) (#("7" 0 1 (fontified t)) . 2958) (undo-tree-id49 . 1) (undo-tree-id50 . 1) (undo-tree-id51 . 1) (t 22959 21342 526704 8000)) nil (22959 21359 367507 57000) 0 nil]) ((#("j" 0 1 (fontified t)) . -3043) (undo-tree-id28 . -1) (3035 . 3044)) nil (22959 21342 517800 698000) 0 nil]) ((#("j" 0 1 (fontified t)) . -3081) (undo-tree-id29 . -1) (3081 . 3082) 3080) nil (22959 21342 517830 305000) 0 nil]) ((#("j" 0 1 (fontified t)) . -3081) (undo-tree-id30 . -1) (3060 . 3082) (3052 . 3060) (#("#" 0 1 (fontified t)) . -3052) (undo-tree-id31 . -1) (undo-tree-id32 . 1) (#("\\" 0 1 (fontified t)) . -3053) (undo-tree-id33 . -1) (undo-tree-id34 . 1) 3054 (3043 . 3054) (#("." 0 1 (fontified t)) . -3043) (undo-tree-id35 . -1) 3044 (3040 . 3044) (#("j" 0 1 (fontified t)) . -3040) (undo-tree-id36 . -1) (3039 . 3041) (#("j" 0 1 (fontified t)) . -3039) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("a" 0 1 (fontified t)) . -3040) (undo-tree-id39 . -1) 3041 (#("m" 0 1 (fontified t)) . -3041) (undo-tree-id40 . -1) 3042 (3039 . 3042) (#("j" 0 1 (fontified t)) . -3039) (undo-tree-id41 . -1) (3036 . 3040) (3015 . 3036) (#("a" 0 1 (fontified t)) . -3015) (undo-tree-id42 . -1) (#(" " 0 1 (fontified t)) . -3016) (undo-tree-id43 . -1) 3017 (3010 . 3017) (2991 . 3010) (#("s" 0 1 (fontified t)) . -2991) (undo-tree-id44 . -1) 2992 (2990 . 2992) (2969 . 2990) (#("D" 0 1 (fontified t)) . -2969) (undo-tree-id45 . -1) (#("e" 0 1 (fontified t)) . -2970) (undo-tree-id46 . -1) (#("s" 0 1 (fontified t)) . -2971) (undo-tree-id47 . -1) (#("i" 0 1 (fontified t)) . -2972) (undo-tree-id48 . -1) 2973 (2972 . 2973) (2966 . 2972) (2959 . 2966) (t 22959 21284 166702 831000) 2915) nil (22959 21342 517946 803000) 0 nil]) ((#("j" 0 1 (fontified t face (bold))) . -2916) (undo-tree-id24 . -1) (2907 . 2917)) nil (22959 21284 157438 533000) 0 nil]) ((#("j" 0 1 (fontified t)) . -2950) (undo-tree-id25 . -1) (2950 . 2951) (2940 . 2950) (2919 . 2940) (2906 . 2919) (#("P" 0 1 (fontified t face font-lock-keyword-face)) . -2906) (undo-tree-id26 . -1) (undo-tree-id27 . 1) 2907 (2894 . 2907) (2889 . 2894) (t 22959 21202 773367 857000) 2870) nil (22959 21284 157450 936000) 0 nil]) ((#("      \\1 \\textbf{Hardware Computer} \\hfill Summer 2016
      \\\\ Designed and assembled a basic Von Neumann machine using a Hardware Description Language.
" 0 6 (fontified t) 6 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 16 (fontified t face font-lock-keyword-face) 16 17 (fontified t) 17 34 (fontified t face (bold)) 34 36 (fontified t) 36 42 (fontified t face font-lock-keyword-face) 42 61 (fontified t) 61 63 (fontified t face font-lock-warning-face) 63 154 (fontified t)) . 3366) (undo-tree-id0 . -89) (undo-tree-id1 . -89) (undo-tree-id2 . -154) (undo-tree-id3 . -154) (undo-tree-id4 . -55) (undo-tree-id5 . -55) (undo-tree-id6 . -154) (undo-tree-id7 . -154) (undo-tree-id8 . 65) (undo-tree-id9 . 120) (undo-tree-id10 . 65) (undo-tree-id11 . 120) (undo-tree-id12 . 120) (undo-tree-id13 . -34) (undo-tree-id14 . -89) (undo-tree-id15 . -154) (undo-tree-id16 . 120) (undo-tree-id17 . 120) (undo-tree-id18 . -34) (undo-tree-id19 . -89) (undo-tree-id20 . 65) (undo-tree-id21 . 120) (undo-tree-id22 . 65) (undo-tree-id23 . 65) 3455 (t 22959 21055 480031 555000)) nil (22959 21202 764407 941000) 0 nil]) nil nil (22959 21202 764412 890000) 0 nil] #2# 6159 33 nil]